{"version":3,"sources":["packages/platform-browser-dynamic/platform-browser-dynamic-testing.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","platformBrowserDynamic","testing","core","platformBrowser","compiler","this","i0","testing$1","testing$2","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","DOMTestComponentRenderer","_super","_doc","_this","call","__extends","__","constructor","prototype","create","insertRootElement","rootElId","rootEl","ɵgetDOM","firstChild","content","createTemplate","oldRoots","querySelectorAll","i","length","remove","appendChild","body","ngInjectableDef","defineInjectable","token","DOMTestComponentRenderer_Factory","t","inject","DOCUMENT","providedIn","TestComponentRenderer","COMPILER_PROVIDERS","provide","MockPipeResolver","deps","CompileReflector","PipeResolver","useExisting","MockDirectiveResolver","DirectiveResolver","MockNgModuleResolver","NgModuleResolver","TestingCompilerFactoryImpl","_injector","_compilerFactory","createTestingCompiler","options","compiler$$1","createCompiler","TestingCompilerImpl","injector","get","_compiler","_directiveResolver","_pipeResolver","_moduleResolver","_overrider","ɵMetadataOverrider","defineProperty","enumerable","configurable","compileModuleSync","moduleType","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","getComponentFactory","component","checkOverrideAllowed","type","hasAotSummary","Error","ɵstringify","overrideModule","ngModule","override","oldMetadata","resolve","setNgModule","overrideMetadata","NgModule","clearCacheFor","overrideDirective","directive","setDirective","Directive","overrideComponent","Component","overridePipe","pipe","setPipe","Pipe","loadAotSummaries","summaries","clearCache","getComponentFromError","error","ERROR_COMPONENT_TYPE","getModuleId","id","platformCoreDynamicTesting","createPlatformFactory","ɵplatformCoreDynamic","COMPILER_OPTIONS","useValue","providers","multi","ɵTestingCompilerFactory","useClass","Injector","CompilerFactory","platformBrowserDynamicTesting","ɵINTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS","BrowserDynamicTestingModule","ngModuleDef","ɵdefineNgModule","BrowserTestingModule","ngInjectorDef","defineInjector","BrowserDynamicTestingModule_Factory","imports","ɵDOMTestComponentRenderer","ɵplatformCoreDynamicTesting","value"],"mappings":"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","sourcesContent":["/**\n * @license Angular v8.0.0-beta.6+42.sha-ff8e4dd.with-local-changes\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/core/testing'), require('@angular/platform-browser-dynamic'), require('@angular/platform-browser/testing'), require('@angular/platform-browser'), require('@angular/compiler'), require('@angular/compiler/testing')) :\n    typeof define === 'function' && define.amd ? define('@angular/platform-browser-dynamic/testing', ['exports', '@angular/core', '@angular/core/testing', '@angular/platform-browser-dynamic', '@angular/platform-browser/testing', '@angular/platform-browser', '@angular/compiler', '@angular/compiler/testing'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.platformBrowserDynamic = global.ng.platformBrowserDynamic || {}, global.ng.platformBrowserDynamic.testing = {}), global.ng.core, global.ng.core.testing, global.ng.platformBrowserDynamic, global.ng.platformBrowser.testing, global.ng.platformBrowser, global.ng.compiler, global.ng.compiler.testing));\n}(this, function (exports, i0, testing, platformBrowserDynamic, testing$1, platformBrowser, compiler, testing$2) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\n\n    /**\n     * A DOM based implementation of the TestComponentRenderer.\n     */\n    var DOMTestComponentRenderer = /** @class */ (function (_super) {\n        __extends(DOMTestComponentRenderer, _super);\n        function DOMTestComponentRenderer(_doc) {\n            var _this = _super.call(this) || this;\n            _this._doc = _doc;\n            return _this;\n        }\n        DOMTestComponentRenderer.prototype.insertRootElement = function (rootElId) {\n            var rootEl = platformBrowser.ɵgetDOM().firstChild(platformBrowser.ɵgetDOM().content(platformBrowser.ɵgetDOM().createTemplate(\"<div id=\\\"\" + rootElId + \"\\\"></div>\")));\n            // TODO(juliemr): can/should this be optional?\n            var oldRoots = platformBrowser.ɵgetDOM().querySelectorAll(this._doc, '[id^=root]');\n            for (var i = 0; i < oldRoots.length; i++) {\n                platformBrowser.ɵgetDOM().remove(oldRoots[i]);\n            }\n            platformBrowser.ɵgetDOM().appendChild(this._doc.body, rootEl);\n        };\n        DOMTestComponentRenderer.ngInjectableDef = i0.defineInjectable({ token: DOMTestComponentRenderer, factory: function DOMTestComponentRenderer_Factory(t) { return new (t || DOMTestComponentRenderer)(i0.inject(platformBrowser.DOCUMENT)); }, providedIn: null });\n        return DOMTestComponentRenderer;\n    }(testing.TestComponentRenderer));\n    /*@__PURE__*/ i0.ɵsetClassMetadata(DOMTestComponentRenderer, [{\n            type: i0.Injectable\n        }], function () { return [{\n            type: undefined,\n            decorators: [{\n                    type: i0.Inject,\n                    args: [platformBrowser.DOCUMENT]\n                }]\n        }]; }, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPILER_PROVIDERS = [\n        { provide: testing$2.MockPipeResolver, deps: [compiler.CompileReflector] },\n        { provide: compiler.PipeResolver, useExisting: testing$2.MockPipeResolver },\n        { provide: testing$2.MockDirectiveResolver, deps: [compiler.CompileReflector] },\n        { provide: compiler.DirectiveResolver, useExisting: testing$2.MockDirectiveResolver },\n        { provide: testing$2.MockNgModuleResolver, deps: [compiler.CompileReflector] },\n        { provide: compiler.NgModuleResolver, useExisting: testing$2.MockNgModuleResolver },\n    ];\n    var TestingCompilerFactoryImpl = /** @class */ (function () {\n        function TestingCompilerFactoryImpl(_injector, _compilerFactory) {\n            this._injector = _injector;\n            this._compilerFactory = _compilerFactory;\n        }\n        TestingCompilerFactoryImpl.prototype.createTestingCompiler = function (options) {\n            var compiler$$1 = this._compilerFactory.createCompiler(options);\n            return new TestingCompilerImpl(compiler$$1, compiler$$1.injector.get(testing$2.MockDirectiveResolver), compiler$$1.injector.get(testing$2.MockPipeResolver), compiler$$1.injector.get(testing$2.MockNgModuleResolver));\n        };\n        return TestingCompilerFactoryImpl;\n    }());\n    var TestingCompilerImpl = /** @class */ (function () {\n        function TestingCompilerImpl(_compiler, _directiveResolver, _pipeResolver, _moduleResolver) {\n            this._compiler = _compiler;\n            this._directiveResolver = _directiveResolver;\n            this._pipeResolver = _pipeResolver;\n            this._moduleResolver = _moduleResolver;\n            this._overrider = new testing.ɵMetadataOverrider();\n        }\n        Object.defineProperty(TestingCompilerImpl.prototype, \"injector\", {\n            get: function () { return this._compiler.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        TestingCompilerImpl.prototype.compileModuleSync = function (moduleType) {\n            return this._compiler.compileModuleSync(moduleType);\n        };\n        TestingCompilerImpl.prototype.compileModuleAsync = function (moduleType) {\n            return this._compiler.compileModuleAsync(moduleType);\n        };\n        TestingCompilerImpl.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n            return this._compiler.compileModuleAndAllComponentsSync(moduleType);\n        };\n        TestingCompilerImpl.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n            return this._compiler.compileModuleAndAllComponentsAsync(moduleType);\n        };\n        TestingCompilerImpl.prototype.getComponentFactory = function (component) {\n            return this._compiler.getComponentFactory(component);\n        };\n        TestingCompilerImpl.prototype.checkOverrideAllowed = function (type) {\n            if (this._compiler.hasAotSummary(type)) {\n                throw new Error(i0.ɵstringify(type) + \" was AOT compiled, so its metadata cannot be changed.\");\n            }\n        };\n        TestingCompilerImpl.prototype.overrideModule = function (ngModule, override) {\n            this.checkOverrideAllowed(ngModule);\n            var oldMetadata = this._moduleResolver.resolve(ngModule, false);\n            this._moduleResolver.setNgModule(ngModule, this._overrider.overrideMetadata(i0.NgModule, oldMetadata, override));\n            this.clearCacheFor(ngModule);\n        };\n        TestingCompilerImpl.prototype.overrideDirective = function (directive, override) {\n            this.checkOverrideAllowed(directive);\n            var oldMetadata = this._directiveResolver.resolve(directive, false);\n            this._directiveResolver.setDirective(directive, this._overrider.overrideMetadata(i0.Directive, oldMetadata, override));\n            this.clearCacheFor(directive);\n        };\n        TestingCompilerImpl.prototype.overrideComponent = function (component, override) {\n            this.checkOverrideAllowed(component);\n            var oldMetadata = this._directiveResolver.resolve(component, false);\n            this._directiveResolver.setDirective(component, this._overrider.overrideMetadata(i0.Component, oldMetadata, override));\n            this.clearCacheFor(component);\n        };\n        TestingCompilerImpl.prototype.overridePipe = function (pipe, override) {\n            this.checkOverrideAllowed(pipe);\n            var oldMetadata = this._pipeResolver.resolve(pipe, false);\n            this._pipeResolver.setPipe(pipe, this._overrider.overrideMetadata(i0.Pipe, oldMetadata, override));\n            this.clearCacheFor(pipe);\n        };\n        TestingCompilerImpl.prototype.loadAotSummaries = function (summaries) { this._compiler.loadAotSummaries(summaries); };\n        TestingCompilerImpl.prototype.clearCache = function () { this._compiler.clearCache(); };\n        TestingCompilerImpl.prototype.clearCacheFor = function (type) { this._compiler.clearCacheFor(type); };\n        TestingCompilerImpl.prototype.getComponentFromError = function (error) { return error[compiler.ERROR_COMPONENT_TYPE] || null; };\n        TestingCompilerImpl.prototype.getModuleId = function (moduleType) {\n            return this._moduleResolver.resolve(moduleType, true).id;\n        };\n        return TestingCompilerImpl;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Platform for dynamic tests\n     *\n     * @publicApi\n     */\n    var platformCoreDynamicTesting = i0.createPlatformFactory(platformBrowserDynamic.ɵplatformCoreDynamic, 'coreDynamicTesting', [\n        { provide: i0.COMPILER_OPTIONS, useValue: { providers: COMPILER_PROVIDERS }, multi: true }, {\n            provide: testing.ɵTestingCompilerFactory,\n            useClass: TestingCompilerFactoryImpl,\n            deps: [i0.Injector, i0.CompilerFactory]\n        }\n    ]);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @publicApi\n     */\n    var platformBrowserDynamicTesting = i0.createPlatformFactory(platformCoreDynamicTesting, 'browserDynamicTesting', platformBrowserDynamic.ɵINTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS);\n    /**\n     * NgModule for testing.\n     *\n     * @publicApi\n     */\n    var BrowserDynamicTestingModule = /** @class */ (function () {\n        function BrowserDynamicTestingModule() {\n        }\n        BrowserDynamicTestingModule.ngModuleDef = i0.ɵdefineNgModule({ type: BrowserDynamicTestingModule, exports: [testing$1.BrowserTestingModule] });\n        BrowserDynamicTestingModule.ngInjectorDef = i0.defineInjector({ factory: function BrowserDynamicTestingModule_Factory(t) { return new (t || BrowserDynamicTestingModule)(); }, providers: [\n                { provide: testing.TestComponentRenderer, useClass: DOMTestComponentRenderer },\n            ], imports: [[testing$1.BrowserTestingModule]] });\n        return BrowserDynamicTestingModule;\n    }());\n    /*@__PURE__*/ i0.ɵsetClassMetadata(BrowserDynamicTestingModule, [{\n            type: i0.NgModule,\n            args: [{\n                    exports: [testing$1.BrowserTestingModule],\n                    providers: [\n                        { provide: testing.TestComponentRenderer, useClass: DOMTestComponentRenderer },\n                    ]\n                }]\n        }], null, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.platformBrowserDynamicTesting = platformBrowserDynamicTesting;\n    exports.BrowserDynamicTestingModule = BrowserDynamicTestingModule;\n    exports.ɵDOMTestComponentRenderer = DOMTestComponentRenderer;\n    exports.ɵplatformCoreDynamicTesting = platformCoreDynamicTesting;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=platform-browser-dynamic-testing.umd.js.map\n"]}