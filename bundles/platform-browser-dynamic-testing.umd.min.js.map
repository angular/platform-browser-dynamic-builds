{"version":3,"sources":["packages/platform-browser-dynamic/platform-browser-dynamic-testing.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","platformBrowserDynamic","testing","core","platformBrowser","compiler","this","testing$1","testing$2","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","DOMTestComponentRenderer","_super","_doc","_this","call","__extends","__","constructor","prototype","create","insertRootElement","rootElId","rootEl","ɵgetDOM","firstChild","content","createTemplate","oldRoots","querySelectorAll","i","length","remove","appendChild","body","decorators","type","Injectable","ctorParameters","undefined","Inject","args","DOCUMENT","TestComponentRenderer","COMPILER_PROVIDERS","provide","MockPipeResolver","deps","CompileReflector","PipeResolver","useExisting","MockDirectiveResolver","DirectiveResolver","MockNgModuleResolver","NgModuleResolver","TestingCompilerFactoryImpl","_injector","_compilerFactory","createTestingCompiler","options","compiler$$1","createCompiler","TestingCompilerImpl","injector","get","_compiler","_directiveResolver","_pipeResolver","_moduleResolver","_overrider","ɵMetadataOverrider","defineProperty","enumerable","configurable","compileModuleSync","moduleType","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","getComponentFactory","component","checkOverrideAllowed","hasAotSummary","Error","ɵstringify","overrideModule","ngModule","override","oldMetadata","resolve","setNgModule","overrideMetadata","NgModule","clearCacheFor","overrideDirective","directive","setDirective","Directive","overrideComponent","Component","overridePipe","pipe","setPipe","Pipe","loadAotSummaries","summaries","clearCache","getComponentFromError","error","ERROR_COMPONENT_TYPE","getModuleId","id","platformCoreDynamicTesting","createPlatformFactory","ɵplatformCoreDynamic","COMPILER_OPTIONS","useValue","providers","multi","ɵTestingCompilerFactory","useClass","Injector","CompilerFactory","platformBrowserDynamicTesting","ɵINTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS","BrowserDynamicTestingModule","BrowserTestingModule","ɵangular_packages_platform_browser_dynamic_testing_testing_a","ɵangular_packages_platform_browser_dynamic_testing_testing_b","ɵDOMTestComponentRenderer","ɵplatformCoreDynamicTesting","value"],"mappings":"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","sourcesContent":["/**\n * @license Angular v7.0.0-beta.1+52.sha-1f11039\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/core/testing'), require('@angular/platform-browser'), require('@angular/compiler'), require('@angular/compiler/testing'), require('@angular/platform-browser-dynamic'), require('@angular/platform-browser/testing')) :\n    typeof define === 'function' && define.amd ? define('@angular/platform-browser-dynamic/testing', ['exports', '@angular/core', '@angular/core/testing', '@angular/platform-browser', '@angular/compiler', '@angular/compiler/testing', '@angular/platform-browser-dynamic', '@angular/platform-browser/testing'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.platformBrowserDynamic = global.ng.platformBrowserDynamic || {}, global.ng.platformBrowserDynamic.testing = {}),global.ng.core,global.ng.core.testing,global.ng.platformBrowser,global.ng.compiler,global.ng.compiler.testing,global.ng.platformBrowserDynamic,global.ng.platformBrowser.testing));\n}(this, (function (exports,core,testing,platformBrowser,compiler,testing$1,platformBrowserDynamic,testing$2) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DOM based implementation of the TestComponentRenderer.\n     */\n    var DOMTestComponentRenderer = /** @class */ (function (_super) {\n        __extends(DOMTestComponentRenderer, _super);\n        function DOMTestComponentRenderer(_doc) {\n            var _this = _super.call(this) || this;\n            _this._doc = _doc;\n            return _this;\n        }\n        DOMTestComponentRenderer.prototype.insertRootElement = function (rootElId) {\n            var rootEl = platformBrowser.ɵgetDOM().firstChild(platformBrowser.ɵgetDOM().content(platformBrowser.ɵgetDOM().createTemplate(\"<div id=\\\"\" + rootElId + \"\\\"></div>\")));\n            // TODO(juliemr): can/should this be optional?\n            var oldRoots = platformBrowser.ɵgetDOM().querySelectorAll(this._doc, '[id^=root]');\n            for (var i = 0; i < oldRoots.length; i++) {\n                platformBrowser.ɵgetDOM().remove(oldRoots[i]);\n            }\n            platformBrowser.ɵgetDOM().appendChild(this._doc.body, rootEl);\n        };\n        DOMTestComponentRenderer.decorators = [\n            { type: core.Injectable }\n        ];\n        /** @nocollapse */\n        DOMTestComponentRenderer.ctorParameters = function () { return [\n            { type: undefined, decorators: [{ type: core.Inject, args: [platformBrowser.DOCUMENT,] }] }\n        ]; };\n        return DOMTestComponentRenderer;\n    }(testing.TestComponentRenderer));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPILER_PROVIDERS = [\n        { provide: testing$1.MockPipeResolver, deps: [compiler.CompileReflector] },\n        { provide: compiler.PipeResolver, useExisting: testing$1.MockPipeResolver },\n        { provide: testing$1.MockDirectiveResolver, deps: [compiler.CompileReflector] },\n        { provide: compiler.DirectiveResolver, useExisting: testing$1.MockDirectiveResolver },\n        { provide: testing$1.MockNgModuleResolver, deps: [compiler.CompileReflector] },\n        { provide: compiler.NgModuleResolver, useExisting: testing$1.MockNgModuleResolver },\n    ];\n    var TestingCompilerFactoryImpl = /** @class */ (function () {\n        function TestingCompilerFactoryImpl(_injector, _compilerFactory) {\n            this._injector = _injector;\n            this._compilerFactory = _compilerFactory;\n        }\n        TestingCompilerFactoryImpl.prototype.createTestingCompiler = function (options) {\n            var compiler$$1 = this._compilerFactory.createCompiler(options);\n            return new TestingCompilerImpl(compiler$$1, compiler$$1.injector.get(testing$1.MockDirectiveResolver), compiler$$1.injector.get(testing$1.MockPipeResolver), compiler$$1.injector.get(testing$1.MockNgModuleResolver));\n        };\n        return TestingCompilerFactoryImpl;\n    }());\n    var TestingCompilerImpl = /** @class */ (function () {\n        function TestingCompilerImpl(_compiler, _directiveResolver, _pipeResolver, _moduleResolver) {\n            this._compiler = _compiler;\n            this._directiveResolver = _directiveResolver;\n            this._pipeResolver = _pipeResolver;\n            this._moduleResolver = _moduleResolver;\n            this._overrider = new testing.ɵMetadataOverrider();\n        }\n        Object.defineProperty(TestingCompilerImpl.prototype, \"injector\", {\n            get: function () { return this._compiler.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        TestingCompilerImpl.prototype.compileModuleSync = function (moduleType) {\n            return this._compiler.compileModuleSync(moduleType);\n        };\n        TestingCompilerImpl.prototype.compileModuleAsync = function (moduleType) {\n            return this._compiler.compileModuleAsync(moduleType);\n        };\n        TestingCompilerImpl.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n            return this._compiler.compileModuleAndAllComponentsSync(moduleType);\n        };\n        TestingCompilerImpl.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n            return this._compiler.compileModuleAndAllComponentsAsync(moduleType);\n        };\n        TestingCompilerImpl.prototype.getComponentFactory = function (component) {\n            return this._compiler.getComponentFactory(component);\n        };\n        TestingCompilerImpl.prototype.checkOverrideAllowed = function (type) {\n            if (this._compiler.hasAotSummary(type)) {\n                throw new Error(core.ɵstringify(type) + \" was AOT compiled, so its metadata cannot be changed.\");\n            }\n        };\n        TestingCompilerImpl.prototype.overrideModule = function (ngModule, override) {\n            this.checkOverrideAllowed(ngModule);\n            var oldMetadata = this._moduleResolver.resolve(ngModule, false);\n            this._moduleResolver.setNgModule(ngModule, this._overrider.overrideMetadata(core.NgModule, oldMetadata, override));\n            this.clearCacheFor(ngModule);\n        };\n        TestingCompilerImpl.prototype.overrideDirective = function (directive, override) {\n            this.checkOverrideAllowed(directive);\n            var oldMetadata = this._directiveResolver.resolve(directive, false);\n            this._directiveResolver.setDirective(directive, this._overrider.overrideMetadata(core.Directive, oldMetadata, override));\n            this.clearCacheFor(directive);\n        };\n        TestingCompilerImpl.prototype.overrideComponent = function (component, override) {\n            this.checkOverrideAllowed(component);\n            var oldMetadata = this._directiveResolver.resolve(component, false);\n            this._directiveResolver.setDirective(component, this._overrider.overrideMetadata(core.Component, oldMetadata, override));\n            this.clearCacheFor(component);\n        };\n        TestingCompilerImpl.prototype.overridePipe = function (pipe, override) {\n            this.checkOverrideAllowed(pipe);\n            var oldMetadata = this._pipeResolver.resolve(pipe, false);\n            this._pipeResolver.setPipe(pipe, this._overrider.overrideMetadata(core.Pipe, oldMetadata, override));\n            this.clearCacheFor(pipe);\n        };\n        TestingCompilerImpl.prototype.loadAotSummaries = function (summaries) { this._compiler.loadAotSummaries(summaries); };\n        TestingCompilerImpl.prototype.clearCache = function () { this._compiler.clearCache(); };\n        TestingCompilerImpl.prototype.clearCacheFor = function (type) { this._compiler.clearCacheFor(type); };\n        TestingCompilerImpl.prototype.getComponentFromError = function (error) { return error[compiler.ERROR_COMPONENT_TYPE] || null; };\n        TestingCompilerImpl.prototype.getModuleId = function (moduleType) {\n            return this._moduleResolver.resolve(moduleType, true).id;\n        };\n        return TestingCompilerImpl;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Platform for dynamic tests\n     *\n     * @experimental\n     */\n    var platformCoreDynamicTesting = core.createPlatformFactory(platformBrowserDynamic.ɵplatformCoreDynamic, 'coreDynamicTesting', [\n        { provide: core.COMPILER_OPTIONS, useValue: { providers: COMPILER_PROVIDERS }, multi: true }, {\n            provide: testing.ɵTestingCompilerFactory,\n            useClass: TestingCompilerFactoryImpl,\n            deps: [core.Injector, core.CompilerFactory]\n        }\n    ]);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var platformBrowserDynamicTesting = core.createPlatformFactory(platformCoreDynamicTesting, 'browserDynamicTesting', platformBrowserDynamic.ɵINTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS);\n    /**\n     * NgModule for testing.\n     *\n     *\n     */\n    var BrowserDynamicTestingModule = /** @class */ (function () {\n        function BrowserDynamicTestingModule() {\n        }\n        BrowserDynamicTestingModule.decorators = [\n            { type: core.NgModule, args: [{\n                        exports: [testing$2.BrowserTestingModule],\n                        providers: [\n                            { provide: testing.TestComponentRenderer, useClass: DOMTestComponentRenderer },\n                        ]\n                    },] }\n        ];\n        return BrowserDynamicTestingModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵangular_packages_platform_browser_dynamic_testing_testing_a = COMPILER_PROVIDERS;\n    exports.ɵangular_packages_platform_browser_dynamic_testing_testing_b = TestingCompilerFactoryImpl;\n    exports.platformBrowserDynamicTesting = platformBrowserDynamicTesting;\n    exports.BrowserDynamicTestingModule = BrowserDynamicTestingModule;\n    exports.ɵDOMTestComponentRenderer = DOMTestComponentRenderer;\n    exports.ɵplatformCoreDynamicTesting = platformCoreDynamicTesting;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=platform-browser-dynamic-testing.umd.js.map\n"]}