{"version":3,"sources":["/home/travis/build/angular/angular/dist/packages-dist/platform-browser-dynamic/bundles/platform-browser-dynamic-testing.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","platformBrowserDynamic","testing","core","platformBrowser","compiler","this","_angular_core","_angular_core_testing","_angular_platformBrowserDynamic","_angular_platformBrowser_testing","_angular_platformBrowser","_angular_compiler","_angular_compiler_testing","__extends","d","b","__","constructor","extendStatics","prototype","Object","create","removeMetadata","metadata","remove","references","removeObjects","Set","_loop_1","prop","removeValue","Array","forEach","value","add","_propHashKey","_loop_2","propValue","filter","has","undefined","addMetadata","addValue","concat","setMetadata","set","propName","replacer","key","_serializeReference","JSON","stringify","ref","id","get","ɵstringify","_nextReferenceId","_valueProps","obj","props","keys","startsWith","push","proto","getPrototypeOf","protoProp","desc","getOwnPropertyDescriptor","setPrototypeOf","__proto__","p","hasOwnProperty","DOMTestComponentRenderer","_super","_doc","_this","call","insertRootElement","rootElId","rootEl","ɵgetDOM","firstChild","content","createTemplate","oldRoots","querySelectorAll","i","length","appendChild","body","TestComponentRenderer","decorators","type","Injectable","ctorParameters","Inject","args","DOCUMENT","MetadataOverrider","_references","Map","overrideMetadata","metadataClass","oldMetadata","override","Error","COMPILER_PROVIDERS","provide","MockPipeResolver","deps","CompileReflector","PipeResolver","useExisting","MockDirectiveResolver","DirectiveResolver","MockNgModuleResolver","NgModuleResolver","TestingCompilerFactoryImpl","_injector","_compilerFactory","createTestingCompiler","options","createCompiler","TestingCompilerImpl","injector","_compiler","_directiveResolver","_pipeResolver","_moduleResolver","_overrider","defineProperty","enumerable","configurable","compileModuleSync","moduleType","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","getNgContentSelectors","component","getComponentFactory","checkOverrideAllowed","hasAotSummary","overrideModule","ngModule","resolve","setNgModule","NgModule","clearCacheFor","overrideDirective","directive","setDirective","Directive","overrideComponent","Component","overridePipe","pipe","setPipe","Pipe","loadAotSummaries","summaries","clearCache","getComponentFromError","error","ERROR_COMPONENT_TYPE","platformCoreDynamicTesting","createPlatformFactory","ɵplatformCoreDynamic","COMPILER_OPTIONS","useValue","providers","multi","ɵTestingCompilerFactory","useClass","Injector","CompilerFactory","platformBrowserDynamicTesting","ɵINTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS","BrowserDynamicTestingModule","BrowserTestingModule","ɵDOMTestComponentRenderer","ɵplatformCoreDynamicTesting","ɵa","ɵb"],"mappings":"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","file":"/home/travis/build/angular/angular/dist/packages-dist/platform-browser-dynamic/bundles/platform-browser-dynamic-testing.umd.min.js","sourcesContent":["/**\n * @license Angular v5.0.0-beta.6-fa6b802\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/core/testing'), require('@angular/platform-browser-dynamic'), require('@angular/platform-browser/testing'), require('@angular/platform-browser'), require('@angular/compiler'), require('@angular/compiler/testing')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', '@angular/core', '@angular/core/testing', '@angular/platform-browser-dynamic', '@angular/platform-browser/testing', '@angular/platform-browser', '@angular/compiler', '@angular/compiler/testing'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.platformBrowserDynamic = global.ng.platformBrowserDynamic || {}, global.ng.platformBrowserDynamic.testing = {}),global.ng.core,global.ng.core.testing,global.ng.platformBrowserDynamic,global.ng.platformBrowser.testing,global.ng.platformBrowser,global.ng.compiler,global.ng.compiler.testing));\n}(this, (function (exports,_angular_core,_angular_core_testing,_angular_platformBrowserDynamic,_angular_platformBrowser_testing,_angular_platformBrowser,_angular_compiler,_angular_compiler_testing) { 'use strict';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\n\n/**\n * @license Angular v5.0.0-beta.6-fa6b802\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A DOM based implementation of the TestComponentRenderer.\n */\nvar DOMTestComponentRenderer = (function (_super) {\n    __extends(DOMTestComponentRenderer, _super);\n    /**\n     * @param {?} _doc\n     */\n    function DOMTestComponentRenderer(_doc /** TODO #9100 */) {\n        var _this = _super.call(this) || this;\n        _this._doc = _doc; /** TODO #9100 */\n        return _this;\n    }\n    /**\n     * @param {?} rootElId\n     * @return {?}\n     */\n    DOMTestComponentRenderer.prototype.insertRootElement = function (rootElId) {\n        var /** @type {?} */ rootEl = (_angular_platformBrowser.ɵgetDOM().firstChild(_angular_platformBrowser.ɵgetDOM().content(_angular_platformBrowser.ɵgetDOM().createTemplate(\"<div id=\\\"\" + rootElId + \"\\\"></div>\"))));\n        // TODO(juliemr): can/should this be optional?\n        var /** @type {?} */ oldRoots = _angular_platformBrowser.ɵgetDOM().querySelectorAll(this._doc, '[id^=root]');\n        for (var /** @type {?} */ i = 0; i < oldRoots.length; i++) {\n            _angular_platformBrowser.ɵgetDOM().remove(oldRoots[i]);\n        }\n        _angular_platformBrowser.ɵgetDOM().appendChild(this._doc.body, rootEl);\n    };\n    return DOMTestComponentRenderer;\n}(_angular_core_testing.TestComponentRenderer));\nDOMTestComponentRenderer.decorators = [\n    { type: _angular_core.Injectable },\n];\n/** @nocollapse */\nDOMTestComponentRenderer.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: _angular_core.Inject, args: [_angular_platformBrowser.DOCUMENT,] },] },\n]; };\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _nextReferenceId = 0;\nvar MetadataOverrider = (function () {\n    function MetadataOverrider() {\n        this._references = new Map();\n    }\n    /**\n     * Creates a new instance for the given metadata class\n     * based on an old instance and overrides.\n     * @template C, T\n     * @param {?} metadataClass\n     * @param {?} oldMetadata\n     * @param {?} override\n     * @return {?}\n     */\n    MetadataOverrider.prototype.overrideMetadata = function (metadataClass, oldMetadata, override) {\n        var /** @type {?} */ props = {};\n        if (oldMetadata) {\n            _valueProps(oldMetadata).forEach(function (prop) { return props[prop] = ((oldMetadata))[prop]; });\n        }\n        if (override.set) {\n            if (override.remove || override.add) {\n                throw new Error(\"Cannot set and add/remove \" + _angular_core.ɵstringify(metadataClass) + \" at the same time!\");\n            }\n            setMetadata(props, override.set);\n        }\n        if (override.remove) {\n            removeMetadata(props, override.remove, this._references);\n        }\n        if (override.add) {\n            addMetadata(props, override.add);\n        }\n        return new metadataClass(/** @type {?} */ (props));\n    };\n    return MetadataOverrider;\n}());\n/**\n * @param {?} metadata\n * @param {?} remove\n * @param {?} references\n * @return {?}\n */\nfunction removeMetadata(metadata, remove, references) {\n    var /** @type {?} */ removeObjects = new Set();\n    var _loop_1 = function (prop) {\n        var /** @type {?} */ removeValue = remove[prop];\n        if (removeValue instanceof Array) {\n            removeValue.forEach(function (value) { removeObjects.add(_propHashKey(prop, value, references)); });\n        }\n        else {\n            removeObjects.add(_propHashKey(prop, removeValue, references));\n        }\n    };\n    for (var /** @type {?} */ prop in remove) {\n        _loop_1(/** @type {?} */ prop);\n    }\n    var _loop_2 = function (prop) {\n        var /** @type {?} */ propValue = metadata[prop];\n        if (propValue instanceof Array) {\n            metadata[prop] = propValue.filter(function (value) { return !removeObjects.has(_propHashKey(prop, value, references)); });\n        }\n        else {\n            if (removeObjects.has(_propHashKey(prop, propValue, references))) {\n                metadata[prop] = undefined;\n            }\n        }\n    };\n    for (var /** @type {?} */ prop in metadata) {\n        _loop_2(/** @type {?} */ prop);\n    }\n}\n/**\n * @param {?} metadata\n * @param {?} add\n * @return {?}\n */\nfunction addMetadata(metadata, add) {\n    for (var /** @type {?} */ prop in add) {\n        var /** @type {?} */ addValue = add[prop];\n        var /** @type {?} */ propValue = metadata[prop];\n        if (propValue != null && propValue instanceof Array) {\n            metadata[prop] = propValue.concat(addValue);\n        }\n        else {\n            metadata[prop] = addValue;\n        }\n    }\n}\n/**\n * @param {?} metadata\n * @param {?} set\n * @return {?}\n */\nfunction setMetadata(metadata, set) {\n    for (var /** @type {?} */ prop in set) {\n        metadata[prop] = set[prop];\n    }\n}\n/**\n * @param {?} propName\n * @param {?} propValue\n * @param {?} references\n * @return {?}\n */\nfunction _propHashKey(propName, propValue, references) {\n    var /** @type {?} */ replacer = function (key, value) {\n        if (typeof value === 'function') {\n            value = _serializeReference(value, references);\n        }\n        return value;\n    };\n    return propName + \":\" + JSON.stringify(propValue, replacer);\n}\n/**\n * @param {?} ref\n * @param {?} references\n * @return {?}\n */\nfunction _serializeReference(ref, references) {\n    var /** @type {?} */ id = references.get(ref);\n    if (!id) {\n        id = \"\" + _angular_core.ɵstringify(ref) + _nextReferenceId++;\n        references.set(ref, id);\n    }\n    return id;\n}\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction _valueProps(obj) {\n    var /** @type {?} */ props = [];\n    // regular public props\n    Object.keys(obj).forEach(function (prop) {\n        if (!prop.startsWith('_')) {\n            props.push(prop);\n        }\n    });\n    // getters\n    var /** @type {?} */ proto = obj;\n    while (proto = Object.getPrototypeOf(proto)) {\n        Object.keys(proto).forEach(function (protoProp) {\n            var /** @type {?} */ desc = Object.getOwnPropertyDescriptor(proto, protoProp);\n            if (!protoProp.startsWith('_') && desc && 'get' in desc) {\n                props.push(protoProp);\n            }\n        });\n    }\n    return props;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar COMPILER_PROVIDERS = [\n    { provide: _angular_compiler_testing.MockPipeResolver, deps: [_angular_compiler.CompileReflector] },\n    { provide: _angular_compiler.PipeResolver, useExisting: _angular_compiler_testing.MockPipeResolver },\n    { provide: _angular_compiler_testing.MockDirectiveResolver, deps: [_angular_compiler.CompileReflector] },\n    { provide: _angular_compiler.DirectiveResolver, useExisting: _angular_compiler_testing.MockDirectiveResolver },\n    { provide: _angular_compiler_testing.MockNgModuleResolver, deps: [_angular_compiler.CompileReflector] },\n    { provide: _angular_compiler.NgModuleResolver, useExisting: _angular_compiler_testing.MockNgModuleResolver },\n];\nvar TestingCompilerFactoryImpl = (function () {\n    /**\n     * @param {?} _injector\n     * @param {?} _compilerFactory\n     */\n    function TestingCompilerFactoryImpl(_injector, _compilerFactory) {\n        this._injector = _injector;\n        this._compilerFactory = _compilerFactory;\n    }\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n    TestingCompilerFactoryImpl.prototype.createTestingCompiler = function (options) {\n        var /** @type {?} */ compiler = (this._compilerFactory.createCompiler(options));\n        return new TestingCompilerImpl(compiler, compiler.injector.get(_angular_compiler_testing.MockDirectiveResolver), compiler.injector.get(_angular_compiler_testing.MockPipeResolver), compiler.injector.get(_angular_compiler_testing.MockNgModuleResolver));\n    };\n    return TestingCompilerFactoryImpl;\n}());\nvar TestingCompilerImpl = (function () {\n    /**\n     * @param {?} _compiler\n     * @param {?} _directiveResolver\n     * @param {?} _pipeResolver\n     * @param {?} _moduleResolver\n     */\n    function TestingCompilerImpl(_compiler, _directiveResolver, _pipeResolver, _moduleResolver) {\n        this._compiler = _compiler;\n        this._directiveResolver = _directiveResolver;\n        this._pipeResolver = _pipeResolver;\n        this._moduleResolver = _moduleResolver;\n        this._overrider = new MetadataOverrider();\n    }\n    Object.defineProperty(TestingCompilerImpl.prototype, \"injector\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._compiler.injector; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    TestingCompilerImpl.prototype.compileModuleSync = function (moduleType) {\n        return this._compiler.compileModuleSync(moduleType);\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    TestingCompilerImpl.prototype.compileModuleAsync = function (moduleType) {\n        return this._compiler.compileModuleAsync(moduleType);\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    TestingCompilerImpl.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n        return this._compiler.compileModuleAndAllComponentsSync(moduleType);\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    TestingCompilerImpl.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n        return this._compiler.compileModuleAndAllComponentsAsync(moduleType);\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    TestingCompilerImpl.prototype.getNgContentSelectors = function (component) {\n        return this._compiler.getNgContentSelectors(component);\n    };\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    TestingCompilerImpl.prototype.getComponentFactory = function (component) {\n        return this._compiler.getComponentFactory(component);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    TestingCompilerImpl.prototype.checkOverrideAllowed = function (type) {\n        if (this._compiler.hasAotSummary(type)) {\n            throw new Error(_angular_core.ɵstringify(type) + \" was AOT compiled, so its metadata cannot be changed.\");\n        }\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} override\n     * @return {?}\n     */\n    TestingCompilerImpl.prototype.overrideModule = function (ngModule, override) {\n        this.checkOverrideAllowed(ngModule);\n        var /** @type {?} */ oldMetadata = this._moduleResolver.resolve(ngModule, false);\n        this._moduleResolver.setNgModule(ngModule, this._overrider.overrideMetadata(_angular_core.NgModule, oldMetadata, override));\n        this.clearCacheFor(ngModule);\n    };\n    /**\n     * @param {?} directive\n     * @param {?} override\n     * @return {?}\n     */\n    TestingCompilerImpl.prototype.overrideDirective = function (directive, override) {\n        this.checkOverrideAllowed(directive);\n        var /** @type {?} */ oldMetadata = this._directiveResolver.resolve(directive, false);\n        this._directiveResolver.setDirective(directive, this._overrider.overrideMetadata(_angular_core.Directive, /** @type {?} */ ((oldMetadata)), override));\n        this.clearCacheFor(directive);\n    };\n    /**\n     * @param {?} component\n     * @param {?} override\n     * @return {?}\n     */\n    TestingCompilerImpl.prototype.overrideComponent = function (component, override) {\n        this.checkOverrideAllowed(component);\n        var /** @type {?} */ oldMetadata = this._directiveResolver.resolve(component, false);\n        this._directiveResolver.setDirective(component, this._overrider.overrideMetadata(_angular_core.Component, /** @type {?} */ ((oldMetadata)), override));\n        this.clearCacheFor(component);\n    };\n    /**\n     * @param {?} pipe\n     * @param {?} override\n     * @return {?}\n     */\n    TestingCompilerImpl.prototype.overridePipe = function (pipe, override) {\n        this.checkOverrideAllowed(pipe);\n        var /** @type {?} */ oldMetadata = this._pipeResolver.resolve(pipe, false);\n        this._pipeResolver.setPipe(pipe, this._overrider.overrideMetadata(_angular_core.Pipe, oldMetadata, override));\n        this.clearCacheFor(pipe);\n    };\n    /**\n     * @param {?} summaries\n     * @return {?}\n     */\n    TestingCompilerImpl.prototype.loadAotSummaries = function (summaries) { this._compiler.loadAotSummaries(summaries); };\n    /**\n     * @return {?}\n     */\n    TestingCompilerImpl.prototype.clearCache = function () { this._compiler.clearCache(); };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    TestingCompilerImpl.prototype.clearCacheFor = function (type) { this._compiler.clearCacheFor(type); };\n    /**\n     * @param {?} error\n     * @return {?}\n     */\n    TestingCompilerImpl.prototype.getComponentFromError = function (error) { return ((error))[_angular_compiler.ERROR_COMPONENT_TYPE] || null; };\n    return TestingCompilerImpl;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Platform for dynamic tests\n *\n * \\@experimental\n */\nvar platformCoreDynamicTesting = _angular_core.createPlatformFactory(_angular_platformBrowserDynamic.ɵplatformCoreDynamic, 'coreDynamicTesting', [\n    { provide: _angular_core.COMPILER_OPTIONS, useValue: { providers: COMPILER_PROVIDERS }, multi: true }, {\n        provide: _angular_core_testing.ɵTestingCompilerFactory,\n        useClass: TestingCompilerFactoryImpl,\n        deps: [_angular_core.Injector, _angular_core.CompilerFactory]\n    }\n]);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@stable\n */\nvar platformBrowserDynamicTesting = _angular_core.createPlatformFactory(platformCoreDynamicTesting, 'browserDynamicTesting', _angular_platformBrowserDynamic.ɵINTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS);\n/**\n * NgModule for testing.\n *\n * \\@stable\n */\nvar BrowserDynamicTestingModule = (function () {\n    function BrowserDynamicTestingModule() {\n    }\n    return BrowserDynamicTestingModule;\n}());\nBrowserDynamicTestingModule.decorators = [\n    { type: _angular_core.NgModule, args: [{\n                exports: [_angular_platformBrowser_testing.BrowserTestingModule],\n                providers: [\n                    { provide: _angular_core_testing.TestComponentRenderer, useClass: DOMTestComponentRenderer },\n                ]\n            },] },\n];\n/** @nocollapse */\nBrowserDynamicTestingModule.ctorParameters = function () { return []; };\n\nexports.platformBrowserDynamicTesting = platformBrowserDynamicTesting;\nexports.BrowserDynamicTestingModule = BrowserDynamicTestingModule;\nexports.ɵDOMTestComponentRenderer = DOMTestComponentRenderer;\nexports.ɵplatformCoreDynamicTesting = platformCoreDynamicTesting;\nexports.ɵa = COMPILER_PROVIDERS;\nexports.ɵb = TestingCompilerFactoryImpl;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=platform-browser-dynamic-testing.umd.js.map\n"]}