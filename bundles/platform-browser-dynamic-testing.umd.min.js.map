{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","../../../packages/platform-browser-dynamic/esm5/testing/src/dom_test_component_renderer.js","../../../packages/platform-browser-dynamic/esm5/testing/src/metadata_overrider.js","../../../packages/platform-browser-dynamic/esm5/testing/src/compiler_factory.js","../../../packages/platform-browser-dynamic/esm5/testing/src/platform_core_dynamic_testing.js","../../../packages/platform-browser-dynamic/esm5/testing/src/testing.js"],"names":["exports","module","factory","require","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","_super","DOMTestComponentRenderer","prototype","insertRootElement","getDOM","rootEl","_angular_platformBrowser","ɵgetDOM","firstChild","content","createTemplate","rootElId","oldRoots","querySelectorAll","this","_doc","i","length","Injectable","remove","decorators","type","_angular_core","metadataClass","oldMetadata","override","props","obj","prop","startsWith","push","proto","getPrototypeOf","keys","forEach","protoProp","desc","getOwnPropertyDescriptor","set","add","Error","ɵstringify","setMetadata","metadata","references","removeObjects","Set","removeValue","value","_propHashKey","propValue","filter","has","undefined","removeMetadata","_references","addValue","concat","addMetadata","propName","key","ref","id","get","_serializeReference","COMPILER_PROVIDERS","provide","NgModuleResolver","deps","MockNgModuleResolver","_angular_compiler","PipeResolver","useExisting","_angular_compiler_testing","MockPipeResolver","MockDirectiveResolver","CompileReflector","DirectiveResolver","createTestingCompiler","options","compiler","_compilerFactory","createCompiler","TestingCompilerImpl","injector","TestingCompilerFactoryImpl","_compiler","_directiveResolver","_pipeResolver","_moduleResolver","defineProperty","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","getComponentFactory","checkOverrideAllowed","overrideModule","ngModule","overrideDirective","directive","overrideComponent","component","overridePipe","pipe","clearCache","clearCacheFor","getComponentFromError","createPlatformFactory","_angular_platformBrowserDynamic","ɵplatformCoreDynamic","COMPILER_OPTIONS","useValue","providers","multi","BrowserTestingModule","NgModule","args","_angular_platformBrowser_testing","_angular_core_testing","TestComponentRenderer","useClass"],"mappings":"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","file":"/home/travis/build/angular/angular/dist/packages-dist/platform-browser-dynamic/bundles/platform-browser-dynamic-testing.umd.min.js.map","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { Inject, Injectable } from '@angular/core';\nimport { TestComponentRenderer } from '@angular/core/testing';\nimport { DOCUMENT, ɵgetDOM as getDOM } from '@angular/platform-browser';\n/**\n * A DOM based implementation of the TestComponentRenderer.\n */\nvar DOMTestComponentRenderer = /** @class */ (function (_super) {\n    tslib_1.__extends(DOMTestComponentRenderer, _super);\n    function DOMTestComponentRenderer(_doc /** TODO #9100 */) {\n        var _this = _super.call(this) || this;\n        _this._doc = _doc;\n        return _this;\n    }\n    /**\n     * @param {?} rootElId\n     * @return {?}\n     */\n    DOMTestComponentRenderer.prototype.insertRootElement = /**\n     * @param {?} rootElId\n     * @return {?}\n     */\n    function (rootElId) {\n        var /** @type {?} */ rootEl = /** @type {?} */ (getDOM().firstChild(getDOM().content(getDOM().createTemplate(\"<div id=\\\"\" + rootElId + \"\\\"></div>\"))));\n        // TODO(juliemr): can/should this be optional?\n        var /** @type {?} */ oldRoots = getDOM().querySelectorAll(this._doc, '[id^=root]');\n        for (var /** @type {?} */ i = 0; i < oldRoots.length; i++) {\n            getDOM().remove(oldRoots[i]);\n        }\n        getDOM().appendChild(this._doc.body, rootEl);\n    };\n    DOMTestComponentRenderer.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    DOMTestComponentRenderer.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },\n    ]; };\n    return DOMTestComponentRenderer;\n}(TestComponentRenderer));\nexport { DOMTestComponentRenderer };\nfunction DOMTestComponentRenderer_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    DOMTestComponentRenderer.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    DOMTestComponentRenderer.ctorParameters;\n    /** @type {?} */\n    DOMTestComponentRenderer.prototype._doc;\n}\n//# sourceMappingURL=dom_test_component_renderer.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ɵstringify as stringify } from '@angular/core';\nvar /** @type {?} */ _nextReferenceId = 0;\nvar MetadataOverrider = /** @class */ (function () {\n    function MetadataOverrider() {\n        this._references = new Map();\n    }\n    /**\n     * Creates a new instance for the given metadata class\n     * based on an old instance and overrides.\n     */\n    /**\n     * Creates a new instance for the given metadata class\n     * based on an old instance and overrides.\n     * @template C, T\n     * @param {?} metadataClass\n     * @param {?} oldMetadata\n     * @param {?} override\n     * @return {?}\n     */\n    MetadataOverrider.prototype.overrideMetadata = /**\n     * Creates a new instance for the given metadata class\n     * based on an old instance and overrides.\n     * @template C, T\n     * @param {?} metadataClass\n     * @param {?} oldMetadata\n     * @param {?} override\n     * @return {?}\n     */\n    function (metadataClass, oldMetadata, override) {\n        var /** @type {?} */ props = {};\n        if (oldMetadata) {\n            _valueProps(oldMetadata).forEach(function (prop) { return props[prop] = (/** @type {?} */ (oldMetadata))[prop]; });\n        }\n        if (override.set) {\n            if (override.remove || override.add) {\n                throw new Error(\"Cannot set and add/remove \" + stringify(metadataClass) + \" at the same time!\");\n            }\n            setMetadata(props, override.set);\n        }\n        if (override.remove) {\n            removeMetadata(props, override.remove, this._references);\n        }\n        if (override.add) {\n            addMetadata(props, override.add);\n        }\n        return new metadataClass(/** @type {?} */ (props));\n    };\n    return MetadataOverrider;\n}());\nexport { MetadataOverrider };\nfunction MetadataOverrider_tsickle_Closure_declarations() {\n    /** @type {?} */\n    MetadataOverrider.prototype._references;\n}\n/**\n * @param {?} metadata\n * @param {?} remove\n * @param {?} references\n * @return {?}\n */\nfunction removeMetadata(metadata, remove, references) {\n    var /** @type {?} */ removeObjects = new Set();\n    var _loop_1 = function (prop) {\n        var /** @type {?} */ removeValue = remove[prop];\n        if (removeValue instanceof Array) {\n            removeValue.forEach(function (value) { removeObjects.add(_propHashKey(prop, value, references)); });\n        }\n        else {\n            removeObjects.add(_propHashKey(prop, removeValue, references));\n        }\n    };\n    for (var /** @type {?} */ prop in remove) {\n        _loop_1(prop);\n    }\n    var _loop_2 = function (prop) {\n        var /** @type {?} */ propValue = metadata[prop];\n        if (propValue instanceof Array) {\n            metadata[prop] = propValue.filter(function (value) { return !removeObjects.has(_propHashKey(prop, value, references)); });\n        }\n        else {\n            if (removeObjects.has(_propHashKey(prop, propValue, references))) {\n                metadata[prop] = undefined;\n            }\n        }\n    };\n    for (var /** @type {?} */ prop in metadata) {\n        _loop_2(prop);\n    }\n}\n/**\n * @param {?} metadata\n * @param {?} add\n * @return {?}\n */\nfunction addMetadata(metadata, add) {\n    for (var /** @type {?} */ prop in add) {\n        var /** @type {?} */ addValue = add[prop];\n        var /** @type {?} */ propValue = metadata[prop];\n        if (propValue != null && propValue instanceof Array) {\n            metadata[prop] = propValue.concat(addValue);\n        }\n        else {\n            metadata[prop] = addValue;\n        }\n    }\n}\n/**\n * @param {?} metadata\n * @param {?} set\n * @return {?}\n */\nfunction setMetadata(metadata, set) {\n    for (var /** @type {?} */ prop in set) {\n        metadata[prop] = set[prop];\n    }\n}\n/**\n * @param {?} propName\n * @param {?} propValue\n * @param {?} references\n * @return {?}\n */\nfunction _propHashKey(propName, propValue, references) {\n    var /** @type {?} */ replacer = function (key, value) {\n        if (typeof value === 'function') {\n            value = _serializeReference(value, references);\n        }\n        return value;\n    };\n    return propName + \":\" + JSON.stringify(propValue, replacer);\n}\n/**\n * @param {?} ref\n * @param {?} references\n * @return {?}\n */\nfunction _serializeReference(ref, references) {\n    var /** @type {?} */ id = references.get(ref);\n    if (!id) {\n        id = \"\" + stringify(ref) + _nextReferenceId++;\n        references.set(ref, id);\n    }\n    return id;\n}\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction _valueProps(obj) {\n    var /** @type {?} */ props = [];\n    // regular public props\n    Object.keys(obj).forEach(function (prop) {\n        if (!prop.startsWith('_')) {\n            props.push(prop);\n        }\n    });\n    // getters\n    var /** @type {?} */ proto = obj;\n    while (proto = Object.getPrototypeOf(proto)) {\n        Object.keys(proto).forEach(function (protoProp) {\n            var /** @type {?} */ desc = Object.getOwnPropertyDescriptor(proto, protoProp);\n            if (!protoProp.startsWith('_') && desc && 'get' in desc) {\n                props.push(protoProp);\n            }\n        });\n    }\n    return props;\n}\n//# sourceMappingURL=metadata_overrider.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { CompileReflector, DirectiveResolver, ERROR_COMPONENT_TYPE, NgModuleResolver, PipeResolver } from '@angular/compiler';\nimport { MockDirectiveResolver, MockNgModuleResolver, MockPipeResolver } from '@angular/compiler/testing';\nimport { Component, Directive, NgModule, Pipe, ɵstringify } from '@angular/core';\nimport { MetadataOverrider } from './metadata_overrider';\nexport var /** @type {?} */ COMPILER_PROVIDERS = [\n    { provide: MockPipeResolver, deps: [CompileReflector] },\n    { provide: PipeResolver, useExisting: MockPipeResolver },\n    { provide: MockDirectiveResolver, deps: [CompileReflector] },\n    { provide: DirectiveResolver, useExisting: MockDirectiveResolver },\n    { provide: MockNgModuleResolver, deps: [CompileReflector] },\n    { provide: NgModuleResolver, useExisting: MockNgModuleResolver },\n];\nvar TestingCompilerFactoryImpl = /** @class */ (function () {\n    function TestingCompilerFactoryImpl(_injector, _compilerFactory) {\n        this._injector = _injector;\n        this._compilerFactory = _compilerFactory;\n    }\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n    TestingCompilerFactoryImpl.prototype.createTestingCompiler = /**\n     * @param {?} options\n     * @return {?}\n     */\n    function (options) {\n        var /** @type {?} */ compiler = /** @type {?} */ (this._compilerFactory.createCompiler(options));\n        return new TestingCompilerImpl(compiler, compiler.injector.get(MockDirectiveResolver), compiler.injector.get(MockPipeResolver), compiler.injector.get(MockNgModuleResolver));\n    };\n    return TestingCompilerFactoryImpl;\n}());\nexport { TestingCompilerFactoryImpl };\nfunction TestingCompilerFactoryImpl_tsickle_Closure_declarations() {\n    /** @type {?} */\n    TestingCompilerFactoryImpl.prototype._injector;\n    /** @type {?} */\n    TestingCompilerFactoryImpl.prototype._compilerFactory;\n}\nvar TestingCompilerImpl = /** @class */ (function () {\n    function TestingCompilerImpl(_compiler, _directiveResolver, _pipeResolver, _moduleResolver) {\n        this._compiler = _compiler;\n        this._directiveResolver = _directiveResolver;\n        this._pipeResolver = _pipeResolver;\n        this._moduleResolver = _moduleResolver;\n        this._overrider = new MetadataOverrider();\n    }\n    Object.defineProperty(TestingCompilerImpl.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._compiler.injector; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    TestingCompilerImpl.prototype.compileModuleSync = /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return this._compiler.compileModuleSync(moduleType);\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    TestingCompilerImpl.prototype.compileModuleAsync = /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return this._compiler.compileModuleAsync(moduleType);\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    TestingCompilerImpl.prototype.compileModuleAndAllComponentsSync = /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return this._compiler.compileModuleAndAllComponentsSync(moduleType);\n    };\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    TestingCompilerImpl.prototype.compileModuleAndAllComponentsAsync = /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return this._compiler.compileModuleAndAllComponentsAsync(moduleType);\n    };\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    TestingCompilerImpl.prototype.getComponentFactory = /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        return this._compiler.getComponentFactory(component);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    TestingCompilerImpl.prototype.checkOverrideAllowed = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        if (this._compiler.hasAotSummary(type)) {\n            throw new Error(ɵstringify(type) + \" was AOT compiled, so its metadata cannot be changed.\");\n        }\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} override\n     * @return {?}\n     */\n    TestingCompilerImpl.prototype.overrideModule = /**\n     * @param {?} ngModule\n     * @param {?} override\n     * @return {?}\n     */\n    function (ngModule, override) {\n        this.checkOverrideAllowed(ngModule);\n        var /** @type {?} */ oldMetadata = this._moduleResolver.resolve(ngModule, false);\n        this._moduleResolver.setNgModule(ngModule, this._overrider.overrideMetadata(NgModule, oldMetadata, override));\n        this.clearCacheFor(ngModule);\n    };\n    /**\n     * @param {?} directive\n     * @param {?} override\n     * @return {?}\n     */\n    TestingCompilerImpl.prototype.overrideDirective = /**\n     * @param {?} directive\n     * @param {?} override\n     * @return {?}\n     */\n    function (directive, override) {\n        this.checkOverrideAllowed(directive);\n        var /** @type {?} */ oldMetadata = this._directiveResolver.resolve(directive, false);\n        this._directiveResolver.setDirective(directive, this._overrider.overrideMetadata(Directive, /** @type {?} */ ((oldMetadata)), override));\n        this.clearCacheFor(directive);\n    };\n    /**\n     * @param {?} component\n     * @param {?} override\n     * @return {?}\n     */\n    TestingCompilerImpl.prototype.overrideComponent = /**\n     * @param {?} component\n     * @param {?} override\n     * @return {?}\n     */\n    function (component, override) {\n        this.checkOverrideAllowed(component);\n        var /** @type {?} */ oldMetadata = this._directiveResolver.resolve(component, false);\n        this._directiveResolver.setDirective(component, this._overrider.overrideMetadata(Component, /** @type {?} */ ((oldMetadata)), override));\n        this.clearCacheFor(component);\n    };\n    /**\n     * @param {?} pipe\n     * @param {?} override\n     * @return {?}\n     */\n    TestingCompilerImpl.prototype.overridePipe = /**\n     * @param {?} pipe\n     * @param {?} override\n     * @return {?}\n     */\n    function (pipe, override) {\n        this.checkOverrideAllowed(pipe);\n        var /** @type {?} */ oldMetadata = this._pipeResolver.resolve(pipe, false);\n        this._pipeResolver.setPipe(pipe, this._overrider.overrideMetadata(Pipe, oldMetadata, override));\n        this.clearCacheFor(pipe);\n    };\n    /**\n     * @param {?} summaries\n     * @return {?}\n     */\n    TestingCompilerImpl.prototype.loadAotSummaries = /**\n     * @param {?} summaries\n     * @return {?}\n     */\n    function (summaries) { this._compiler.loadAotSummaries(summaries); };\n    /**\n     * @return {?}\n     */\n    TestingCompilerImpl.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () { this._compiler.clearCache(); };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    TestingCompilerImpl.prototype.clearCacheFor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { this._compiler.clearCacheFor(type); };\n    /**\n     * @param {?} error\n     * @return {?}\n     */\n    TestingCompilerImpl.prototype.getComponentFromError = /**\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) { return (/** @type {?} */ (error))[ERROR_COMPONENT_TYPE] || null; };\n    return TestingCompilerImpl;\n}());\nexport { TestingCompilerImpl };\nfunction TestingCompilerImpl_tsickle_Closure_declarations() {\n    /** @type {?} */\n    TestingCompilerImpl.prototype._overrider;\n    /** @type {?} */\n    TestingCompilerImpl.prototype._compiler;\n    /** @type {?} */\n    TestingCompilerImpl.prototype._directiveResolver;\n    /** @type {?} */\n    TestingCompilerImpl.prototype._pipeResolver;\n    /** @type {?} */\n    TestingCompilerImpl.prototype._moduleResolver;\n}\n//# sourceMappingURL=compiler_factory.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { COMPILER_OPTIONS, CompilerFactory, Injector, createPlatformFactory } from '@angular/core';\nimport { ɵTestingCompilerFactory as TestingCompilerFactory } from '@angular/core/testing';\nimport { ɵplatformCoreDynamic as platformCoreDynamic } from '@angular/platform-browser-dynamic';\nimport { COMPILER_PROVIDERS, TestingCompilerFactoryImpl } from './compiler_factory';\n/**\n * Platform for dynamic tests\n *\n * \\@experimental\n */\nexport var /** @type {?} */ platformCoreDynamicTesting = createPlatformFactory(platformCoreDynamic, 'coreDynamicTesting', [\n    { provide: COMPILER_OPTIONS, useValue: { providers: COMPILER_PROVIDERS }, multi: true }, {\n        provide: TestingCompilerFactory,\n        useClass: TestingCompilerFactoryImpl,\n        deps: [Injector, CompilerFactory]\n    }\n]);\n//# sourceMappingURL=platform_core_dynamic_testing.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { NgModule, createPlatformFactory } from '@angular/core';\nimport { TestComponentRenderer } from '@angular/core/testing';\nimport { ɵINTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS as INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS } from '@angular/platform-browser-dynamic';\nimport { BrowserTestingModule } from '@angular/platform-browser/testing';\nimport { DOMTestComponentRenderer } from './dom_test_component_renderer';\nimport { platformCoreDynamicTesting } from './platform_core_dynamic_testing';\nexport { ɵDOMTestComponentRenderer, ɵplatformCoreDynamicTesting } from './private_export_testing';\n/**\n *\n */\nexport var /** @type {?} */ platformBrowserDynamicTesting = createPlatformFactory(platformCoreDynamicTesting, 'browserDynamicTesting', INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS);\n/**\n * NgModule for testing.\n *\n *\n */\nvar BrowserDynamicTestingModule = /** @class */ (function () {\n    function BrowserDynamicTestingModule() {\n    }\n    BrowserDynamicTestingModule.decorators = [\n        { type: NgModule, args: [{\n                    exports: [BrowserTestingModule],\n                    providers: [\n                        { provide: TestComponentRenderer, useClass: DOMTestComponentRenderer },\n                    ]\n                },] },\n    ];\n    /** @nocollapse */\n    BrowserDynamicTestingModule.ctorParameters = function () { return []; };\n    return BrowserDynamicTestingModule;\n}());\nexport { BrowserDynamicTestingModule };\nfunction BrowserDynamicTestingModule_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    BrowserDynamicTestingModule.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    BrowserDynamicTestingModule.ctorParameters;\n}\n//# sourceMappingURL=testing.js.map"]}