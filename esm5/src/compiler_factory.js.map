{"version":3,"file":"compiler_factory.js","sourceRoot":"","sources":["../../../../../packages/platform-browser-dynamic/src/compiler_factory.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Compiler, CompilerFactory, ComponentFactory, CompilerOptions, ModuleWithComponentFactories, Inject, InjectionToken, Optional, PACKAGE_ROOT_URL, PlatformRef, StaticProvider, TRANSLATIONS, Type, isDevMode, platformCore, ÉµConsole as Console, ViewEncapsulation, Injector, NgModuleFactory, TRANSLATIONS_FORMAT, MissingTranslationStrategy,} from '@angular/core';\n\nimport {StaticSymbolCache, JitCompiler, ProviderMeta, ExternalReference, I18NHtmlParser, Identifiers, ViewCompiler, CompileMetadataResolver, UrlResolver, TemplateParser, NgModuleCompiler, JitSummaryResolver, SummaryResolver, StyleCompiler, PipeResolver, ElementSchemaRegistry, DomElementSchemaRegistry, ResourceLoader, NgModuleResolver, HtmlParser, CompileReflector, CompilerConfig, DirectiveNormalizer, DirectiveResolver, Lexer, Parser} from '@angular/compiler';\n\nimport {JitReflector} from './compiler_reflector';\n\nexport const ERROR_COLLECTOR_TOKEN = new InjectionToken('ErrorCollector');\n\n/**\n * A default provider for {@link PACKAGE_ROOT_URL} that maps to '/'.\n */\nexport const DEFAULT_PACKAGE_URL_PROVIDER = {\n  provide: PACKAGE_ROOT_URL,\n  useValue: '/'\n};\n\nconst _NO_RESOURCE_LOADER: ResourceLoader = {\n  get(url: string): Promise<string>{\n      throw new Error(\n          `No ResourceLoader implementation has been provided. Can't read the url \"${url}\"`);}\n};\n\nconst baseHtmlParser = new InjectionToken('HtmlParser');\n\nexport class CompilerImpl implements Compiler {\n  private _delegate: JitCompiler;\n  public readonly injector: Injector;\n  constructor(\n      injector: Injector, private _metadataResolver: CompileMetadataResolver,\n      templateParser: TemplateParser, styleCompiler: StyleCompiler, viewCompiler: ViewCompiler,\n      ngModuleCompiler: NgModuleCompiler, summaryResolver: SummaryResolver<Type<any>>,\n      compileReflector: CompileReflector, compilerConfig: CompilerConfig, console: Console) {\n    this._delegate = new JitCompiler(\n        _metadataResolver, templateParser, styleCompiler, viewCompiler, ngModuleCompiler,\n        summaryResolver, compileReflector, compilerConfig, console,\n        this.getExtraNgModuleProviders.bind(this));\n    this.injector = injector;\n  }\n\n  private getExtraNgModuleProviders() {\n    return [this._metadataResolver.getProviderMetadata(\n        new ProviderMeta(Compiler, {useValue: this}))];\n  }\n\n  compileModuleSync<T>(moduleType: Type<T>): NgModuleFactory<T> {\n    return this._delegate.compileModuleSync(moduleType) as NgModuleFactory<T>;\n  }\n  compileModuleAsync<T>(moduleType: Type<T>): Promise<NgModuleFactory<T>> {\n    return this._delegate.compileModuleAsync(moduleType) as Promise<NgModuleFactory<T>>;\n  }\n  compileModuleAndAllComponentsSync<T>(moduleType: Type<T>): ModuleWithComponentFactories<T> {\n    const result = this._delegate.compileModuleAndAllComponentsSync(moduleType);\n    return {\n      ngModuleFactory: result.ngModuleFactory as NgModuleFactory<T>,\n      componentFactories: result.componentFactories as ComponentFactory<any>[],\n    };\n  }\n  compileModuleAndAllComponentsAsync<T>(moduleType: Type<T>):\n      Promise<ModuleWithComponentFactories<T>> {\n    return this._delegate.compileModuleAndAllComponentsAsync(moduleType)\n        .then((result) => ({\n                ngModuleFactory: result.ngModuleFactory as NgModuleFactory<T>,\n                componentFactories: result.componentFactories as ComponentFactory<any>[],\n              }));\n  }\n  loadAotSummaries(summaries: () => any[]) { this._delegate.loadAotSummaries(summaries); }\n  hasAotSummary(ref: Type<any>): boolean { return this._delegate.hasAotSummary(ref); }\n  getComponentFactory<T>(component: Type<T>): ComponentFactory<T> {\n    return this._delegate.getComponentFactory(component) as ComponentFactory<T>;\n  }\n  clearCache(): void { this._delegate.clearCache(); }\n  clearCacheFor(type: Type<any>) { this._delegate.clearCacheFor(type); }\n}\n\n/**\n * A set of providers that provide `JitCompiler` and its dependencies to use for\n * template compilation.\n */\nexport const COMPILER_PROVIDERS = <StaticProvider[]>[\n  {provide: CompileReflector, useValue: new JitReflector()},\n  {provide: ResourceLoader, useValue: _NO_RESOURCE_LOADER},\n  {provide: JitSummaryResolver, deps: []},\n  {provide: SummaryResolver, useExisting: JitSummaryResolver},\n  {provide: Console, deps: []},\n  {provide: Lexer, deps: []},\n  {provide: Parser, deps: [Lexer]},\n  {\n    provide: baseHtmlParser,\n    useClass: HtmlParser,\n    deps: [],\n  },\n  {\n    provide: I18NHtmlParser,\n    useFactory: (parser: HtmlParser, translations: string | null, format: string,\n                 config: CompilerConfig, console: Console) => {\n      translations = translations || '';\n      const missingTranslation =\n          translations ? config.missingTranslation ! : MissingTranslationStrategy.Ignore;\n      return new I18NHtmlParser(parser, translations, format, missingTranslation, console);\n    },\n    deps: [\n      baseHtmlParser,\n      [new Optional(), new Inject(TRANSLATIONS)],\n      [new Optional(), new Inject(TRANSLATIONS_FORMAT)],\n      [CompilerConfig],\n      [Console],\n    ]\n  },\n  {\n    provide: HtmlParser,\n    useExisting: I18NHtmlParser,\n  },\n  {\n    provide: TemplateParser, deps: [CompilerConfig, CompileReflector,\n    Parser, ElementSchemaRegistry,\n    I18NHtmlParser, Console]\n  },\n  { provide: DirectiveNormalizer, deps: [ResourceLoader, UrlResolver, HtmlParser, CompilerConfig]},\n  { provide: CompileMetadataResolver, deps: [CompilerConfig, HtmlParser, NgModuleResolver,\n                      DirectiveResolver, PipeResolver,\n                      SummaryResolver,\n                      ElementSchemaRegistry,\n                      DirectiveNormalizer, Console,\n                      [Optional, StaticSymbolCache],\n                      CompileReflector,\n                      [Optional, ERROR_COLLECTOR_TOKEN]]},\n  DEFAULT_PACKAGE_URL_PROVIDER,\n  { provide: StyleCompiler, deps: [UrlResolver]},\n  { provide: ViewCompiler, deps: [CompileReflector]},\n  { provide: NgModuleCompiler, deps: [CompileReflector] },\n  { provide: CompilerConfig, useValue: new CompilerConfig()},\n  { provide: Compiler, useClass: CompilerImpl, deps: [Injector, CompileMetadataResolver,\n                                TemplateParser, StyleCompiler,\n                                ViewCompiler, NgModuleCompiler,\n                                SummaryResolver, CompileReflector, CompilerConfig,\n                                Console]},\n  { provide: DomElementSchemaRegistry, deps: []},\n  { provide: ElementSchemaRegistry, useExisting: DomElementSchemaRegistry},\n  { provide: UrlResolver, deps: [PACKAGE_ROOT_URL]},\n  { provide: DirectiveResolver, deps: [CompileReflector]},\n  { provide: PipeResolver, deps: [CompileReflector]},\n  { provide: NgModuleResolver, deps: [CompileReflector]},\n];\n\n/**\n * @experimental\n */\nexport class JitCompilerFactory implements CompilerFactory {\n  private _defaultOptions: CompilerOptions[];\n\n  /* @internal */\n  constructor(defaultOptions: CompilerOptions[]) {\n    const compilerOptions: CompilerOptions = {\n      useJit: true,\n      defaultEncapsulation: ViewEncapsulation.Emulated,\n      missingTranslation: MissingTranslationStrategy.Warning,\n    };\n\n    this._defaultOptions = [compilerOptions, ...defaultOptions];\n  }\n  createCompiler(options: CompilerOptions[] = []): Compiler {\n    const opts = _mergeOptions(this._defaultOptions.concat(options));\n    const injector = Injector.create([\n      COMPILER_PROVIDERS, {\n        provide: CompilerConfig,\n        useFactory: () => {\n          return new CompilerConfig({\n            // let explicit values from the compiler options overwrite options\n            // from the app providers\n            useJit: opts.useJit,\n            jitDevMode: isDevMode(),\n            // let explicit values from the compiler options overwrite options\n            // from the app providers\n            defaultEncapsulation: opts.defaultEncapsulation,\n            missingTranslation: opts.missingTranslation,\n            preserveWhitespaces: opts.preserveWhitespaces,\n          });\n        },\n        deps: []\n      },\n      opts.providers !\n    ]);\n    return injector.get(Compiler);\n  }\n}\n\nfunction _mergeOptions(optionsArr: CompilerOptions[]): CompilerOptions {\n  return {\n    useJit: _lastDefined(optionsArr.map(options => options.useJit)),\n    defaultEncapsulation: _lastDefined(optionsArr.map(options => options.defaultEncapsulation)),\n    providers: _mergeArrays(optionsArr.map(options => options.providers !)),\n    missingTranslation: _lastDefined(optionsArr.map(options => options.missingTranslation)),\n    preserveWhitespaces: _lastDefined(optionsArr.map(options => options.preserveWhitespaces)),\n  };\n}\n\nfunction _lastDefined<T>(args: T[]): T|undefined {\n  for (let i = args.length - 1; i >= 0; i--) {\n    if (args[i] !== undefined) {\n      return args[i];\n    }\n  }\n  return undefined;\n}\n\nfunction _mergeArrays(parts: any[][]): any[] {\n  const result: any[] = [];\n  parts.forEach((part) => part && result.push(...part));\n  return result;\n}\n"]}