{"version":3,"file":"platform-browser-dynamic.es5.js","sources":["../../../../packages/platform-browser-dynamic/index.ts","../../../../packages/platform-browser-dynamic/src/platform-browser-dynamic.ts","../../../../packages/platform-browser-dynamic/src/version.ts","../../../../packages/platform-browser-dynamic/src/resource_loader/resource_loader_cache.ts","../../../../packages/platform-browser-dynamic/src/private_export.ts","../../../../packages/platform-browser-dynamic/src/platform_providers.ts","../../../../packages/platform-browser-dynamic/src/resource_loader/resource_loader_impl.ts","../../../../packages/platform-browser-dynamic/src/platform_core_dynamic.ts","../../../../packages/platform-browser-dynamic/src/compiler_factory.ts","../../../../packages/platform-browser-dynamic/src/compiler_reflector.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the platform-browser-dynamic package.\n */\nexport * from './src/platform-browser-dynamic';\n\n// This file only reexports content of the `src` folder. Keep it that way.\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ResourceLoader} from '@angular/compiler';\nimport {CompilerFactory, PlatformRef, Provider, StaticProvider, createPlatformFactory, platformCore} from '@angular/core';\n\nimport {platformCoreDynamic} from './platform_core_dynamic';\nimport {INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS} from './platform_providers';\nimport {CachedResourceLoader} from './resource_loader/resource_loader_cache';\n\nexport * from './private_export';\nexport {VERSION} from './version';\n\n/**\n * @experimental\n */\nexport const RESOURCE_CACHE_PROVIDER: Provider[] =\n    [{provide: ResourceLoader, useClass: CachedResourceLoader, deps: []}];\n\n/**\n * @stable\n */\nexport const platformBrowserDynamic = createPlatformFactory(\n    platformCoreDynamic, 'browserDynamic', INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS);\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n\nimport {Version} from '@angular/core';\n/**\n * @stable\n */\nexport const VERSION = new Version('5.0.0-beta.4-a56468c');\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ResourceLoader} from '@angular/compiler';\nimport {ɵglobal as global} from '@angular/core';\n\n/**\n * An implementation of ResourceLoader that uses a template cache to avoid doing an actual\n * ResourceLoader.\n *\n * The template cache needs to be built and loaded into window.$templateCache\n * via a separate mechanism.\n */\nexport class CachedResourceLoader extends ResourceLoader {\n  private _cache: {[url: string]: string};\n\n  constructor() {\n    super();\n    this._cache = (<any>global).$templateCache;\n    if (this._cache == null) {\n      throw new Error('CachedResourceLoader: Template cache was not found in $templateCache.');\n    }\n  }\n\n  get(url: string): Promise<string> {\n    if (this._cache.hasOwnProperty(url)) {\n      return Promise.resolve(this._cache[url]);\n    } else {\n      return <Promise<any>>Promise.reject(\n          'CachedResourceLoader: Did not find cached template for ' + url);\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {CompilerImpl as ɵCompilerImpl} from './compiler_factory';\nexport {platformCoreDynamic as ɵplatformCoreDynamic} from './platform_core_dynamic';\nexport {INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS as ɵINTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS} from './platform_providers';\nexport {ResourceLoaderImpl as ɵResourceLoaderImpl} from './resource_loader/resource_loader_impl';\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ɵPLATFORM_BROWSER_ID as PLATFORM_BROWSER_ID} from '@angular/common';\nimport {ResourceLoader} from '@angular/compiler';\nimport {COMPILER_OPTIONS, PLATFORM_ID, StaticProvider} from '@angular/core';\n\nimport {ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS as INTERNAL_BROWSER_PLATFORM_PROVIDERS} from '@angular/platform-browser';\n\nimport {ResourceLoaderImpl} from './resource_loader/resource_loader_impl';\n\nexport const INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS: StaticProvider[] = [\n  INTERNAL_BROWSER_PLATFORM_PROVIDERS,\n  {\n    provide: COMPILER_OPTIONS,\n    useValue: {providers: [{provide: ResourceLoader, useClass: ResourceLoaderImpl, deps: []}]},\n    multi: true\n  },\n  {provide: PLATFORM_ID, useValue: PLATFORM_BROWSER_ID},\n];\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ResourceLoader} from '@angular/compiler';\nimport {Injectable} from '@angular/core';\n\n\n\nexport class ResourceLoaderImpl extends ResourceLoader {\n  get(url: string): Promise<string> {\n    let resolve: (result: any) => void;\n    let reject: (error: any) => void;\n    const promise = new Promise<string>((res, rej) => {\n      resolve = res;\n      reject = rej;\n    });\n    const xhr = new XMLHttpRequest();\n    xhr.open('GET', url, true);\n    xhr.responseType = 'text';\n\n    xhr.onload = function() {\n      // responseText is the old-school way of retrieving response (supported by IE8 & 9)\n      // response/responseType properties were introduced in ResourceLoader Level2 spec (supported\n      // by IE10)\n      const response = xhr.response || xhr.responseText;\n\n      // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n      let status = xhr.status === 1223 ? 204 : xhr.status;\n\n      // fix status code when it is 0 (0 status is undocumented).\n      // Occurs when accessing file resources or on Android 4.1 stock browser\n      // while retrieving files from application cache.\n      if (status === 0) {\n        status = response ? 200 : 0;\n      }\n\n      if (200 <= status && status <= 300) {\n        resolve(response);\n      } else {\n        reject(`Failed to load ${url}`);\n      }\n    };\n\n    xhr.onerror = function() { reject(`Failed to load ${url}`); };\n\n    xhr.send();\n    return promise;\n  }\nstatic decorators: {type: Function, args?: any[]}[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: {type: Function, args?: any[]}[]}|null)[] = () => [\n];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {COMPILER_OPTIONS, CompilerFactory, PlatformRef, StaticProvider, createPlatformFactory, platformCore} from '@angular/core';\nimport {JitCompilerFactory} from './compiler_factory';\n\n/**\n * A platform that included corePlatform and the compiler.\n *\n * @experimental\n */\nexport const platformCoreDynamic = createPlatformFactory(platformCore, 'coreDynamic', [\n  {provide: COMPILER_OPTIONS, useValue: {}, multi: true},\n  {provide: CompilerFactory, useClass: JitCompilerFactory, deps: [COMPILER_OPTIONS]},\n]);\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Compiler, CompilerFactory, ComponentFactory, CompilerOptions, ModuleWithComponentFactories, Inject, InjectionToken, Optional, PACKAGE_ROOT_URL, PlatformRef, StaticProvider, TRANSLATIONS, Type, isDevMode, platformCore, ɵConsole as Console, ViewEncapsulation, Injector, NgModuleFactory, TRANSLATIONS_FORMAT, MissingTranslationStrategy,} from '@angular/core';\n\nimport {StaticSymbolCache, JitCompiler, ProviderMeta, ExternalReference, I18NHtmlParser, Identifiers, ViewCompiler, CompileMetadataResolver, UrlResolver, TemplateParser, NgModuleCompiler, JitSummaryResolver, SummaryResolver, StyleCompiler, PipeResolver, ElementSchemaRegistry, DomElementSchemaRegistry, ResourceLoader, NgModuleResolver, HtmlParser, CompileReflector, CompilerConfig, DirectiveNormalizer, DirectiveResolver, Lexer, Parser} from '@angular/compiler';\n\nimport {JitReflector} from './compiler_reflector';\n\nexport const ERROR_COLLECTOR_TOKEN = new InjectionToken('ErrorCollector');\n\n/**\n * A default provider for {@link PACKAGE_ROOT_URL} that maps to '/'.\n */\nexport const DEFAULT_PACKAGE_URL_PROVIDER = {\n  provide: PACKAGE_ROOT_URL,\n  useValue: '/'\n};\n\nconst _NO_RESOURCE_LOADER: ResourceLoader = {\n  get(url: string): Promise<string>{\n      throw new Error(\n          `No ResourceLoader implementation has been provided. Can't read the url \"${url}\"`);}\n};\n\nconst baseHtmlParser = new InjectionToken('HtmlParser');\n\nexport class CompilerImpl implements Compiler {\n  private _delegate: JitCompiler;\n  constructor(\n      private _injector: Injector, private _metadataResolver: CompileMetadataResolver,\n      templateParser: TemplateParser, styleCompiler: StyleCompiler, viewCompiler: ViewCompiler,\n      ngModuleCompiler: NgModuleCompiler, summaryResolver: SummaryResolver<Type<any>>,\n      compileReflector: CompileReflector, compilerConfig: CompilerConfig, console: Console) {\n    this._delegate = new JitCompiler(\n        _metadataResolver, templateParser, styleCompiler, viewCompiler, ngModuleCompiler,\n        summaryResolver, compileReflector, compilerConfig, console,\n        this.getExtraNgModuleProviders.bind(this));\n  }\n\n  get injector(): Injector { return this._injector; }\n\n  private getExtraNgModuleProviders() {\n    return [this._metadataResolver.getProviderMetadata(\n        new ProviderMeta(Compiler, {useValue: this}))];\n  }\n\n  compileModuleSync<T>(moduleType: Type<T>): NgModuleFactory<T> {\n    return this._delegate.compileModuleSync(moduleType) as NgModuleFactory<T>;\n  }\n  compileModuleAsync<T>(moduleType: Type<T>): Promise<NgModuleFactory<T>> {\n    return this._delegate.compileModuleAsync(moduleType) as Promise<NgModuleFactory<T>>;\n  }\n  compileModuleAndAllComponentsSync<T>(moduleType: Type<T>): ModuleWithComponentFactories<T> {\n    const result = this._delegate.compileModuleAndAllComponentsSync(moduleType);\n    return {\n      ngModuleFactory: result.ngModuleFactory as NgModuleFactory<T>,\n      componentFactories: result.componentFactories as ComponentFactory<any>[],\n    };\n  }\n  compileModuleAndAllComponentsAsync<T>(moduleType: Type<T>):\n      Promise<ModuleWithComponentFactories<T>> {\n    return this._delegate.compileModuleAndAllComponentsAsync(moduleType)\n        .then((result) => ({\n                ngModuleFactory: result.ngModuleFactory as NgModuleFactory<T>,\n                componentFactories: result.componentFactories as ComponentFactory<any>[],\n              }));\n  }\n  getNgContentSelectors(component: Type<any>): string[] {\n    return this._delegate.getNgContentSelectors(component);\n  }\n  loadAotSummaries(summaries: () => any[]) { this._delegate.loadAotSummaries(summaries); }\n  hasAotSummary(ref: Type<any>): boolean { return this._delegate.hasAotSummary(ref); }\n  getComponentFactory<T>(component: Type<T>): ComponentFactory<T> {\n    return this._delegate.getComponentFactory(component) as ComponentFactory<T>;\n  }\n  clearCache(): void { this._delegate.clearCache(); }\n  clearCacheFor(type: Type<any>) { this._delegate.clearCacheFor(type); }\n}\n\n/**\n * A set of providers that provide `JitCompiler` and its dependencies to use for\n * template compilation.\n */\nexport const COMPILER_PROVIDERS = <StaticProvider[]>[\n  {provide: CompileReflector, useValue: new JitReflector()},\n  {provide: ResourceLoader, useValue: _NO_RESOURCE_LOADER},\n  {provide: JitSummaryResolver, deps: []},\n  {provide: SummaryResolver, useExisting: JitSummaryResolver},\n  {provide: Console, deps: []},\n  {provide: Lexer, deps: []},\n  {provide: Parser, deps: [Lexer]},\n  {\n    provide: baseHtmlParser,\n    useClass: HtmlParser,\n    deps: [],\n  },\n  {\n    provide: I18NHtmlParser,\n    useFactory: (parser: HtmlParser, translations: string | null, format: string,\n                 config: CompilerConfig, console: Console) => {\n      translations = translations || '';\n      const missingTranslation =\n          translations ? config.missingTranslation ! : MissingTranslationStrategy.Ignore;\n      return new I18NHtmlParser(parser, translations, format, missingTranslation, console);\n    },\n    deps: [\n      baseHtmlParser,\n      [new Optional(), new Inject(TRANSLATIONS)],\n      [new Optional(), new Inject(TRANSLATIONS_FORMAT)],\n      [CompilerConfig],\n      [Console],\n    ]\n  },\n  {\n    provide: HtmlParser,\n    useExisting: I18NHtmlParser,\n  },\n  {\n    provide: TemplateParser, deps: [CompilerConfig, CompileReflector,\n    Parser, ElementSchemaRegistry,\n    I18NHtmlParser, Console]\n  },\n  { provide: DirectiveNormalizer, deps: [ResourceLoader, UrlResolver, HtmlParser, CompilerConfig]},\n  { provide: CompileMetadataResolver, deps: [CompilerConfig, NgModuleResolver,\n                      DirectiveResolver, PipeResolver,\n                      SummaryResolver,\n                      ElementSchemaRegistry,\n                      DirectiveNormalizer, Console,\n                      [Optional, StaticSymbolCache],\n                      CompileReflector,\n                      [Optional, ERROR_COLLECTOR_TOKEN]]},\n  DEFAULT_PACKAGE_URL_PROVIDER,\n  { provide: StyleCompiler, deps: [UrlResolver]},\n  { provide: ViewCompiler, deps: [CompilerConfig, CompileReflector, ElementSchemaRegistry]},\n  { provide: NgModuleCompiler, deps: [CompileReflector] },\n  { provide: CompilerConfig, useValue: new CompilerConfig()},\n  { provide: Compiler, useClass: CompilerImpl, deps: [Injector, CompileMetadataResolver,\n                                TemplateParser, StyleCompiler,\n                                ViewCompiler, NgModuleCompiler,\n                                SummaryResolver, CompileReflector, CompilerConfig,\n                                Console]},\n  { provide: DomElementSchemaRegistry, deps: []},\n  { provide: ElementSchemaRegistry, useExisting: DomElementSchemaRegistry},\n  { provide: UrlResolver, deps: [PACKAGE_ROOT_URL]},\n  { provide: DirectiveResolver, deps: [CompileReflector]},\n  { provide: PipeResolver, deps: [CompileReflector]},\n  { provide: NgModuleResolver, deps: [CompileReflector]},\n];\n\nexport class JitCompilerFactory implements CompilerFactory {\n  private _defaultOptions: CompilerOptions[];\n  constructor(defaultOptions: CompilerOptions[]) {\n    const compilerOptions: CompilerOptions = {\n      useDebug: isDevMode(),\n      useJit: true,\n      defaultEncapsulation: ViewEncapsulation.Emulated,\n      missingTranslation: MissingTranslationStrategy.Warning,\n      enableLegacyTemplate: true,\n      preserveWhitespaces: true,\n    };\n\n    this._defaultOptions = [compilerOptions, ...defaultOptions];\n  }\n  createCompiler(options: CompilerOptions[] = []): Compiler {\n    const opts = _mergeOptions(this._defaultOptions.concat(options));\n    const injector = Injector.create([\n      COMPILER_PROVIDERS, {\n        provide: CompilerConfig,\n        useFactory: () => {\n          return new CompilerConfig({\n            // let explicit values from the compiler options overwrite options\n            // from the app providers\n            useJit: opts.useJit,\n            jitDevMode: isDevMode(),\n            // let explicit values from the compiler options overwrite options\n            // from the app providers\n            defaultEncapsulation: opts.defaultEncapsulation,\n            missingTranslation: opts.missingTranslation,\n            enableLegacyTemplate: opts.enableLegacyTemplate,\n            preserveWhitespaces: opts.preserveWhitespaces,\n          });\n        },\n        deps: []\n      },\n      opts.providers !\n    ]);\n    return injector.get(Compiler);\n  }\n}\n\nfunction _mergeOptions(optionsArr: CompilerOptions[]): CompilerOptions {\n  return {\n    useJit: _lastDefined(optionsArr.map(options => options.useJit)),\n    defaultEncapsulation: _lastDefined(optionsArr.map(options => options.defaultEncapsulation)),\n    providers: _mergeArrays(optionsArr.map(options => options.providers !)),\n    missingTranslation: _lastDefined(optionsArr.map(options => options.missingTranslation)),\n    enableLegacyTemplate: _lastDefined(optionsArr.map(options => options.enableLegacyTemplate)),\n    preserveWhitespaces: _lastDefined(optionsArr.map(options => options.preserveWhitespaces)),\n  };\n}\n\nfunction _lastDefined<T>(args: T[]): T|undefined {\n  for (let i = args.length - 1; i >= 0; i--) {\n    if (args[i] !== undefined) {\n      return args[i];\n    }\n  }\n  return undefined;\n}\n\nfunction _mergeArrays(parts: any[][]): any[] {\n  const result: any[] = [];\n  parts.forEach((part) => part && result.push(...part));\n  return result;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompileReflector, ExternalReference, Identifiers, getUrlScheme, syntaxError} from '@angular/compiler';\nimport {ANALYZE_FOR_ENTRY_COMPONENTS, ChangeDetectionStrategy, ChangeDetectorRef, Component, ComponentFactory, ComponentFactoryResolver, ComponentRef, ElementRef, Inject, InjectionToken, Injector, LOCALE_ID, NgModuleFactory, NgModuleRef, Optional, PACKAGE_ROOT_URL, PlatformRef, QueryList, Renderer, SecurityContext, StaticProvider, TRANSLATIONS, TRANSLATIONS_FORMAT, TemplateRef, Type, ViewContainerRef, ViewEncapsulation, createPlatformFactory, isDevMode, platformCore, ɵCodegenComponentFactoryResolver, ɵConsole as Console, ɵEMPTY_ARRAY, ɵEMPTY_MAP, ɵReflectionCapabilities as ReflectionCapabilities, ɵand, ɵccf, ɵcmf, ɵcrt, ɵdid, ɵeld, ɵinlineInterpolate, ɵinterpolate, ɵmod, ɵmpd, ɵncd, ɵnov, ɵpad, ɵpid, ɵpod, ɵppd, ɵprd, ɵqud, ɵregisterModuleFactory, ɵstringify as stringify, ɵted, ɵunv, ɵvid} from '@angular/core';\n\nexport const MODULE_SUFFIX = '';\nconst builtinExternalReferences = createBuiltinExternalReferencesMap();\n\nexport class JitReflector implements CompileReflector {\n  private reflectionCapabilities: ReflectionCapabilities;\n  private builtinExternalReferences = new Map<ExternalReference, any>();\n  constructor() { this.reflectionCapabilities = new ReflectionCapabilities(); }\n  componentModuleUrl(type: any, cmpMetadata: Component): string {\n    const moduleId = cmpMetadata.moduleId;\n\n    if (typeof moduleId === 'string') {\n      const scheme = getUrlScheme(moduleId);\n      return scheme ? moduleId : `package:${moduleId}${MODULE_SUFFIX}`;\n    } else if (moduleId !== null && moduleId !== void 0) {\n      throw syntaxError(\n          `moduleId should be a string in \"${stringify(type)}\". See https://goo.gl/wIDDiL for more information.\\n` +\n          `If you're using Webpack you should inline the template and the styles, see https://goo.gl/X2J8zc.`);\n    }\n\n    return `./${stringify(type)}`;\n  }\n  parameters(typeOrFunc: /*Type*/ any): any[][] {\n    return this.reflectionCapabilities.parameters(typeOrFunc);\n  }\n  annotations(typeOrFunc: /*Type*/ any): any[] {\n    return this.reflectionCapabilities.annotations(typeOrFunc);\n  }\n  propMetadata(typeOrFunc: /*Type*/ any): {[key: string]: any[]} {\n    return this.reflectionCapabilities.propMetadata(typeOrFunc);\n  }\n  hasLifecycleHook(type: any, lcProperty: string): boolean {\n    return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n  }\n  resolveExternalReference(ref: ExternalReference): any {\n    return builtinExternalReferences.get(ref) || ref.runtime;\n  }\n}\n\n\nfunction createBuiltinExternalReferencesMap() {\n  const map = new Map<ExternalReference, any>();\n  map.set(\n      Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS,\n\n\n      ANALYZE_FOR_ENTRY_COMPONENTS);\n  map.set(Identifiers.ElementRef, ElementRef);\n  map.set(Identifiers.NgModuleRef, NgModuleRef);\n  map.set(Identifiers.ViewContainerRef, ViewContainerRef);\n  map.set(\n      Identifiers.ChangeDetectorRef,\n\n\n      ChangeDetectorRef);\n  map.set(Identifiers.QueryList, QueryList);\n  map.set(Identifiers.TemplateRef, TemplateRef);\n  map.set(\n      Identifiers.CodegenComponentFactoryResolver,\n\n\n      ɵCodegenComponentFactoryResolver);\n  map.set(\n      Identifiers.ComponentFactoryResolver,\n\n\n      ComponentFactoryResolver);\n  map.set(Identifiers.ComponentFactory, ComponentFactory);\n  map.set(Identifiers.ComponentRef, ComponentRef);\n  map.set(Identifiers.NgModuleFactory, NgModuleFactory);\n  map.set(\n      Identifiers.createModuleFactory,\n\n\n      ɵcmf, );\n  map.set(\n      Identifiers.moduleDef,\n\n\n      ɵmod, );\n  map.set(\n      Identifiers.moduleProviderDef,\n\n\n      ɵmpd, );\n  map.set(\n      Identifiers.RegisterModuleFactoryFn,\n\n\n      ɵregisterModuleFactory, );\n  map.set(Identifiers.Injector, Injector);\n  map.set(\n      Identifiers.ViewEncapsulation,\n\n\n      ViewEncapsulation);\n  map.set(\n      Identifiers.ChangeDetectionStrategy,\n\n\n      ChangeDetectionStrategy);\n  map.set(\n      Identifiers.SecurityContext,\n\n\n      SecurityContext, );\n  map.set(Identifiers.LOCALE_ID, LOCALE_ID);\n  map.set(\n      Identifiers.TRANSLATIONS_FORMAT,\n\n\n      TRANSLATIONS_FORMAT);\n  map.set(\n      Identifiers.inlineInterpolate,\n\n\n      ɵinlineInterpolate);\n  map.set(Identifiers.interpolate, ɵinterpolate);\n  map.set(Identifiers.EMPTY_ARRAY, ɵEMPTY_ARRAY);\n  map.set(Identifiers.EMPTY_MAP, ɵEMPTY_MAP);\n  map.set(Identifiers.Renderer, Renderer);\n  map.set(Identifiers.viewDef, ɵvid);\n  map.set(Identifiers.elementDef, ɵeld);\n  map.set(Identifiers.anchorDef, ɵand);\n  map.set(Identifiers.textDef, ɵted);\n  map.set(Identifiers.directiveDef, ɵdid);\n  map.set(Identifiers.providerDef, ɵprd);\n  map.set(Identifiers.queryDef, ɵqud);\n  map.set(Identifiers.pureArrayDef, ɵpad);\n  map.set(Identifiers.pureObjectDef, ɵpod);\n  map.set(Identifiers.purePipeDef, ɵppd);\n  map.set(Identifiers.pipeDef, ɵpid);\n  map.set(Identifiers.nodeValue, ɵnov);\n  map.set(Identifiers.ngContentDef, ɵncd);\n  map.set(Identifiers.unwrapValue, ɵunv);\n  map.set(Identifiers.createRendererType2, ɵcrt);\n  map.set(Identifiers.createComponentFactory, ɵccf);\n  return map;\n}"],"names":["Console"],"mappings":"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"}